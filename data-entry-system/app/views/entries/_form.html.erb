<script>
function create_input(form) {
   var inputs = {};

	$.each(form.serializeArray(), function(i, field) {
		if(field.name.match('entry') &&
			field.name != 'entry[entry_type]' && 
			field.name != 'entry[json_blob]') {

			var name = field.name.replace('entry','');
			name = name.replace('[','');
			name = name.replace(']','');
			if(name in inputs) {
				inputs[name] += ','+field.value; 
			}
			else {
				inputs[name] = field.value;
			}
			json = JSON.stringify(inputs);
			$('#entry_json_blob').val(json);
		}
	});
};

function selectChanged() {
	var newVal = $('#entry_entry_type').val();

	<% 
	all = Entry.all.reject{|e| e.id == @entry.id}.sort_by{|e| e.id.to_i}
	items = all.select{|e| e.entry_type == Entry::ENTRY_ITEM}
	menus = all.select{|e| e.entry_type == Entry::ENTRY_MENU}
	
   # make the 'items' multi-select box
	s_items = collection_select(:entry, :items, items, :id, :id_title, {}, {:multiple => true}) 
	s_items.gsub!("\n","")
	l_items = label :entry, :items;
	eItemsText = "<p>#{l_items} #{s_items}</p>"

	# make the 'next' select box
	s_next = collection_select(:entry, :next, all - items, :id, :summary) 
	s_next.gsub!("\n","")
	l_next = label :entry, :next;
	eNextText = "<p>#{l_next} #{s_next}</p>"

   # make the 'data' text area
	b_data = text_area(:entry, :data, :size=>'50x10')
	l_data = label :entry, :data;
	eDataText = "<p>#{l_data} #{b_data}</p>"
	%>

   var eItems = '<p><%= raw(eItemsText) %></p>';
   var eNext  = '<p><%= raw(eNextText) %> </p>';
   var eData  = '<p><%= raw(eDataText) %> </p>';

	$('#extra').empty();

	switch(newVal) {
   	case 'MENU':
			$('#extra').append(eItems);			
		break;

		case 'ITEM':
			$('#extra').append(eNext);			
		break;

		case 'ENDPAGE':
			$('#extra').append(eData);			
		break;
	}
}

$(document).ready(function() {
	$('#entry_entry_type').change(selectChanged);

	selectChanged( $('entry_entry_type').val() );
});

</script>


<%= form_for @entry do |f| %>
  <%= f.error_messages %>
  <div id='content'>
	  <p>
		 <%= f.label :entry_type %>
		 <%= f.select :entry_type, Entry::ENTRY_TYPES %>
	  </p>
	  <p>
		 <%= f.label :title %>
		 <%= f.text_field :title %>
	  </p>           
	  <%= f.hidden_field :json_blob %>
  </div>

  <!-- This is where the type-specific stuff goes -->
  <div id='extra'></div>

  <p>
    <%= f.submit :onclick => 'create_input($(this).closest("form"))' %>
  </p>
<% end %>
